C51 COMPILER V7.00  RDA5807                                                                05/27/2011 16:30:28 PAGE 1   


C51 COMPILER V7.00, COMPILATION OF MODULE RDA5807
OBJECT MODULE PLACED IN RDA5807.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE RDA5807.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          /*****************************************************************
   2          *                                                                *
   3          * ME850单片机开发系统扩展应用 －  收音模块演示程序               *
   4          *                                                                *
   5          * MCU 芯片: AT89S52      工作频率: 11.0592MHz                    *
   6          *                                                                *
   7          * 版本：V1.0 (2011/01/15)                                        *
   8          * 作者：gguoqing  (Email: gguoqing@willar.com)                   *
   9          * 网站：www.sofi-tech.com (硕飞科技)                             *
  10          *       www.mcusj.com (伟纳单片机世界)                           *
  11          * 邮箱：willar@tom.com                                           *
  12          *                                                                *
  13          *【版权】Copyright(C) 深圳硕飞科技有限公司  All Rights Reserved  *
  14          *【声明】此程序仅用于学习与参考，引用请注明版权和作者信息！      *
  15          *                                                                *
  16          ******************************************************************
  17          *                                                                *
  18          *  K1--- 向上搜索电台 K2--- 向下搜索电台                         *
  19          *  K3--- 音量加       K4--- 音量减                               *
  20          *                                                                *
  21          *****************************************************************/
  22          
  23          #include <reg52.h>
  24          #include <intrins.h>
  25          #include "lcd.h"
  26          #include "IIC.h"
  27          #include "delay.h"
  28          
  29          sbit  K1 = P3^2;
  30          sbit  K2 = P3^3;
  31          sbit  K3 = P3^4;
  32          sbit  K4 = P3^1;
  33          
  34          unsigned long frequency;
  35          
  36          // RDA5807 寄存器
  37          unsigned char  RDA_reg_data[8] =
  38          {
  39             0xd0,0x00,  // 02H
  40             0x00,0x00,  // 03H
  41             0x00,0x40,  // 04H
  42             0x90,0x88,  // 05H
  43          };
  44          
  45          unsigned char code  cdis1[ ] = {"FM STEREO RADIO "};
  46          unsigned char code  cdis2[ ] = {"FM       VOL    "};
  47          
  48          char code reserve[3]_at_ 0x3b; //保留0x3b开始的3个字节
  49          
  50          /**********************************************************
  51          
  52           连续写寄存器子函数
  53          
  54          **********************************************************/
  55          void RDA5807_write_reg(void)
C51 COMPILER V7.00  RDA5807                                                                05/27/2011 16:30:28 PAGE 2   

  56          {
  57   1         uchar i;
  58   1      
  59   1         I2C_start();
  60   1          // 收音模块写入操作
  61   1         I2C_write_byte(0x20);
  62   1          // 寄存器连续写操作
  63   1         for(i=0; i<8; i++)
  64   1         {
  65   2           I2C_write_byte(RDA_reg_data[i]);
  66   2         }
  67   1         I2C_stop();
  68   1      }
  69          
  70          /**********************************************************
  71          
  72           连续读寄存器子函数
  73          
  74          **********************************************************/
  75          void RDA5807_read_reg(uchar *reg_buf)
  76          {
  77   1         I2C_start();
  78   1      
  79   1          // 收音模块读取操作
  80   1         I2C_write_byte(0x21);
  81   1      
  82   1          // 寄存器连续读操作
  83   1         reg_buf[0] = I2C_read_byte(I2C_ACK);
  84   1         reg_buf[1] = I2C_read_byte(I2C_ACK);
  85   1         reg_buf[2] = I2C_read_byte(I2C_ACK);
  86   1         reg_buf[3] = I2C_read_byte(I2C_NACK);
  87   1      
  88   1         I2C_stop();
  89   1      }
  90          
  91          /**********************************************************
  92          
  93           模块上电初始化子函数
  94          
  95          **********************************************************/
  96          void RDA5807_power(void)
  97          {
  98   1         delayms(50);
  99   1      
 100   1          // 发送软件复位指令
 101   1         RDA_reg_data[0] = 0x00;
 102   1         RDA_reg_data[1] = 0x02;
 103   1         RDA5807_write_reg();
 104   1      
 105   1         delayms(10);
 106   1      
 107   1          // 收音模块默认参数
 108   1         RDA_reg_data[0] = 0xd0;
 109   1         RDA_reg_data[1] = 0x01;
 110   1         RDA5807_write_reg();
 111   1      }
 112          /**********************************************************
 113          
 114           功能描述：收音模块自动寻台模式
 115          
 116          **********************************************************/
 117          void RDA5807_FM_seek(void)
C51 COMPILER V7.00  RDA5807                                                                05/27/2011 16:30:28 PAGE 3   

 118          {
 119   1         uint chan;
 120   1         uchar  reg_data[4] = {0x00, 0x00, 0x00, 0x00};
 121   1      
 122   1         RDA_reg_data[3] &= ~(1 << 4);      //调谐禁用
 123   1      
 124   1         // 内部自动寻台使能
 125   1         RDA_reg_data[0] |=  (1 << 0);      //SEEK位置1
 126   1         RDA5807_write_reg();
 127   1      
 128   1          // 等待STC 标志置位
 129   1         while(0 == (reg_data[0] & 0x40))
 130   1         {
 131   2           delayms(20);
 132   2            // 读取内部状态
 133   2           RDA5807_read_reg(reg_data);
 134   2         }
 135   1          // 获取当前工作频点
 136   1         chan = reg_data[0] & 0x03;
 137   1         chan = reg_data[1] | (chan << 8);
 138   1         chan = chan << 6;
 139   1      
 140   1          // 保存当前工作频点
 141   1         RDA_reg_data[2] = (chan >> 8) & 0xff;
 142   1         RDA_reg_data[3] = (chan & 0xff);
 143   1      }
 144          
 145          /**********************************************************
 146          
 147           频率显示子函数
 148          
 149          **********************************************************/
 150          void  show_frequency(void)
 151          { 
 152   1         unsigned char i,display[5];
 153   1         unsigned int  temp;
 154   1      
 155   1         temp = (RDA_reg_data[2]*256)+(RDA_reg_data[3]&0xc0);  //计算
 156   1         temp = temp>>6;
 157   1         frequency = (unsigned long)(100*temp+87000)/100;
 158   1      
 159   1         for(i=0; i<5; i++)  // 清显存单元
 160   1         display[i] = 0x00;
 161   1      
 162   1         display[0] = (frequency)/1000 ;     //数据转换
 163   1         display[1] = (frequency%1000)/100;
 164   1         display[2] = (frequency%100)/10;
 165   1         display[3] = 0x2e;                  //小数点
 166   1         display[4] = (frequency%10);
 167   1      
 168   1         if(display[0] == 0)
 169   1         { 
 170   2           display[0] = display[1]+0x30;
 171   2           display[1] = display[2]+0x30;
 172   2           display[2] = display[3];
 173   2           display[3] = display[4]+0x30;
 174   2           display[4] = 0x20;
 175   2         }
 176   1         else
 177   1         { 
 178   2           display[0] += 0x30;
 179   2           display[1] += 0x30;
C51 COMPILER V7.00  RDA5807                                                                05/27/2011 16:30:28 PAGE 4   

 180   2           display[2] += 0x30;
 181   2           display[4] += 0x30;
 182   2         }
 183   1      
 184   1         lcd_pos_xy(3,2);                      //频率显示
 185   1         lcd_wdat(display[0]);
 186   1         lcd_wdat(display[1]);
 187   1         lcd_wdat(display[2]);
 188   1         lcd_wdat(display[3]);
 189   1         lcd_wdat(display[4]);
 190   1      }
 191          
 192          /**********************************************************
 193          
 194           音量显示子函数
 195          
 196          **********************************************************/
 197          void show_volume()
 198          {
 199   1         unsigned char temp,display[2];
 200   1      
 201   1         temp = RDA_reg_data[7] & 0x0f; //取音量值
 202   1      
 203   1         display[0] = temp/10;
 204   1         display[1] = temp%10;
 205   1      
 206   1         if(display[0] == 0)            //如果高位为0
 207   1         { 
 208   2           display[0] = display[1];     //低位显存内容进入高位显存
 209   2           display[1] = 0x20;           //低位不显示
 210   2         }
 211   1         else 
 212   1         {
 213   2           display[1] += 0x30;
 214   2         }
 215   1         display[0] += 0x30;
 216   1      
 217   1         lcd_pos_xy(13,2);              //音量值显示
 218   1         lcd_wdat(display[0]);
 219   1         lcd_wdat(display[1]); 
 220   1      }
 221          
 222          /**********************************************************
 223          
 224           主函数
 225          
 226          **********************************************************/
 227          void  main(void)
 228          {  
 229   1         P0 = 0xff;
 230   1         P1 = 0xff;
 231   1         P2 = 0xff;
 232   1      
 233   1         lcd_init(); 
 234   1         lcd_w_string(0,1,cdis1,0);
 235   1         lcd_w_string(0,2,cdis2,0);
 236   1      
 237   1         RDA5807_power();
 238   1      
 239   1         while(1)
 240   1         {
 241   2           if(K1 == 0)
C51 COMPILER V7.00  RDA5807                                                                05/27/2011 16:30:28 PAGE 5   

 242   2           {
 243   3             delayms(20);
 244   3             if(K1 == 0)
 245   3             {
 246   4               RDA_reg_data[0] |= (1 << 1);   //SEEK UP        
 247   4               RDA5807_FM_seek();               
 248   4               while(K1 == 0);
 249   4             }
 250   3           }
 251   2      
 252   2           if(K2 == 0)
 253   2           {
 254   3             delayms(20);
 255   3             if(K2 == 0)
 256   3             {
 257   4               RDA_reg_data[0] &= ~(1 << 1);  //SEEK DOWN              
 258   4               RDA5807_FM_seek();
 259   4               while(K2 == 0);
 260   4             }
 261   3           }
 262   2      
 263   2           if(K3 == 0)
 264   2           {
 265   3             delayms(20);
 266   3             if(K3 == 0)
 267   3             {
 268   4               if((RDA_reg_data[7] & 0x0f) < 0x0f)
 269   4               {
 270   5                 RDA_reg_data[0] = 0xd0;
 271   5                 RDA_reg_data[1] = 0x01;
 272   5                 RDA_reg_data[3] &= ~(1 << 4);
 273   5      
 274   5                 RDA_reg_data[7]++;    // 音量递增
 275   5                 RDA5807_write_reg();
 276   5                         while(K3 == 0);
 277   5               }
 278   4             }
 279   3           }
 280   2      
 281   2           if(K4 == 0)
 282   2           {
 283   3             delayms(20);
 284   3             if(K4 == 0)
 285   3             {
 286   4               if((RDA_reg_data[7] & 0x0f) > 0x00)
 287   4               {
 288   5                 RDA_reg_data[0] = 0xd0;
 289   5                 RDA_reg_data[1] = 0x01;
 290   5                 RDA_reg_data[3] &= ~(1 << 4);
 291   5                 
 292   5                 RDA_reg_data[7]--;    // 音量递减
 293   5                 RDA5807_write_reg();
 294   5                 while(K4 == 0);
 295   5               }
 296   4             }
 297   3           }
 298   2      
 299   2           show_volume();
 300   2           show_frequency();
 301   2         }
 302   1      }
 303          
C51 COMPILER V7.00  RDA5807                                                                05/27/2011 16:30:28 PAGE 6   

 304          /*********************************************************/
 305          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    747    ----
   CONSTANT SIZE    =     38    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
