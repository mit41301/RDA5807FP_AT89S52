C51 COMPILER V7.00  IIC                                                                    05/27/2011 15:32:54 PAGE 1   


C51 COMPILER V7.00, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN IIC.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE IIC.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          
   2          #include <reg52.h>
   3          #include "delay.h"
   4          #include "IIC.h"
   5          
   6          sbit SDA = P3^7;//      
   7          sbit SCL = P3^6;//
   8                  
   9          /**********************************************************
  10          
  11           启动子程序
  12          
  13           在 SCL 高电平期间 SDA 发生负跳变
  14          
  15          **********************************************************/
  16          void I2C_start()
  17          {
  18   1         SDA = 1;
  19   1         SCL = 1;
  20   1         delayNOP();
  21   1         SDA = 0;
  22   1         delayNOP();
  23   1         SCL = 0;
  24   1      }
  25          
  26          /**********************************************************
  27          
  28           停止子函数
  29          
  30           在 SCL 高电平期间 SDA 发生正跳变
  31          
  32          **********************************************************/
  33          void I2C_stop()
  34          {
  35   1         SDA = 0;
  36   1         SCL = 1;
  37   1         delayNOP();
  38   1         SDA = 1;
  39   1         delayNOP();
  40   1      }
  41          
  42          /**********************************************************
  43          
  44           发送应答位子函数
  45          
  46           在 SDA 低电平期间 SCL 发生一个正脉冲
  47          
  48          **********************************************************/
  49          /*
  50          void  iic_ack()
  51          {
  52             SDA = 0;
  53             SCL = 1;
  54             delayNOP();
  55             SCL = 0;
C51 COMPILER V7.00  IIC                                                                    05/27/2011 15:32:54 PAGE 2   

  56             NOP;
  57             SDA = 1;
  58          }
  59          */
  60          /**********************************************************
  61          
  62           发送非应答位子函数
  63          
  64           在 SDA 高电平期间 SCL 发生一个正脉冲
  65          
  66          **********************************************************/
  67          /*
  68          void  iic_noack()
  69          {
  70             SDA = 1;
  71             SCL = 1;
  72             delayNOP();
  73             SCL = 0;
  74             delayNOP();
  75             SDA = 0;
  76          }
  77          */
  78          /**********************************************************
  79          
  80           应答位检测子函数
  81          
  82          **********************************************************/
  83          /*
  84          bit iic_testack()
  85          {
  86             bit ack_bit;
  87          
  88             SDA = 1;          //置SDA为输入方式
  89             SCL = 1;
  90             delayNOP();
  91             ack_bit = SDA;
  92             SCL = 0;
  93             NOP;
  94             return ack_bit;  //返回应答位
  95          }
  96          */
  97          /**********************************************************
  98          
  99           发送一个字节子程序
 100          
 101          **********************************************************/
 102          unsigned char I2C_write_byte(unsigned char indata)
 103          {
 104   1          unsigned char i, ack;
 105   1      
 106   1          // I2C 发送8 位数据
 107   1         for (i=0; i<8; i++)
 108   1         {
 109   2           // 高在前低在后
 110   2           if (indata & 0x80)
 111   2            SDA = 1;
 112   2           else
 113   2            SDA = 0;
 114   2      
 115   2           // 发送左移一位
 116   2           indata <<= 1;
 117   2           delayNOP();
C51 COMPILER V7.00  IIC                                                                    05/27/2011 15:32:54 PAGE 3   

 118   2           SCL = 1;
 119   2           delayNOP();
 120   2           SCL = 0;
 121   2         }
 122   1      
 123   1          // 设置SDA为输入
 124   1         SDA =1;;
 125   1         delayNOP();
 126   1      
 127   1          // 读取从机应答状态
 128   1          SCL = 1;
 129   1      
 130   1          delayNOP();
 131   1      
 132   1          if(SDA)
 133   1          {
 134   2            ack = I2C_NACK;
 135   2          }
 136   1          else
 137   1          {
 138   2            ack = I2C_ACK;
 139   2          }
 140   1          SCL = 0;
 141   1      
 142   1          return ack;
 143   1      }
 144          
 145          /**********************************************************
 146          
 147            读一个字节子程序
 148          
 149          **********************************************************/
 150          unsigned char I2C_read_byte(unsigned char ack)
 151          {
 152   1          unsigned char i, data1 = 0;
 153   1      
 154   1          // SDA 设置输入方向
 155   1          SDA = 1;
 156   1      
 157   1          // I2C 接收8位数据
 158   1          for(i = 8; i > 0; i--)
 159   1          {
 160   2            data1 <<= 1;
 161   2            SCL = 1;
 162   2            delayNOP();
 163   2      
 164   2              // 高在前低在后
 165   2              if (SDA)
 166   2              {
 167   3                data1++;
 168   3                      }
 169   2              SCL = 0;
 170   2              delayNOP();
 171   2          }
 172   1      
 173   1          // 主机发送应答状态
 174   1          if(ack == I2C_ACK)
 175   1            SDA = 0;
 176   1          else
 177   1            SDA = 1;
 178   1      
 179   1          delayNOP();
C51 COMPILER V7.00  IIC                                                                    05/27/2011 15:32:54 PAGE 4   

 180   1          SCL = 1;
 181   1          delayNOP();
 182   1          SCL = 0;
 183   1      
 184   1          return data1;
 185   1      }
 186          
 187          /*********************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    158    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
